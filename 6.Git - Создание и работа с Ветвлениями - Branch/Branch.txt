Branch - (ветвление)
обычно при разработке никто не делает commit в master branch так как она являеться золотой копией
разработка обычно идет на других ветках и только тогда когда проверена работоспособность файла его сливают (merge) с основной веткой
в master branch делаеться только merge
Даже если есть bag на основной ветке все равно этот баг будут править другой ветке чтобы не испортить все
когда баг исправлен создаеться 4 commit например
и запрашиваеться запрос на обьеденение веток
_____________________________________
#Создание веток
первое что делаем
```
git init myapp
```
показать сушествуюшие branch 
появиться после `commit`
```
git branch
```
_____________________________________
#git branch
создать новый branch (только создает надо еще будет на нее переключиться)
```
git branch fix_error
```
переключиться к другой ветке
```
git checkout fix_error
```
чтобы удалить ветку (branch)
```
git branch -d fix_error
```
чтобы создать новый branch и сразу на него переключиться
```
git checkout -b fix_error
```
_____________________________________
чтобы обьеденить ветки и перенести изменения с ветки fix_error на master
(переносит так же все commit)
используеться команда:
```
git merge fix_error
```
как теперь удалять лишнии ветки
чтобы удалить ветку (branch)
```
git branch -d fix_error
```
Если мы переключились на другую ветку сделали изменения и сделали git commit
но поняли что нам это не надо и хотим вернуться на master ветку и удалить лишнюю ветку с commit
(для начало он будет жаловаться что не было merge)
и чтобы удалить насильно
```
git branch -D test
```
